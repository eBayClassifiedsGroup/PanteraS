{{with $node_ptr := node}}{{$node := $node_ptr.Node}}
global_defs {
    router_id {{$node.Node}}     # A descriptive name describing the router
}

# Script to check if HAProxy is running. If this check fails,
# keepalived will change the ownership of the virtual IP
# to another server
vrrp_script chk_haproxy {
    script "pidof haproxy_a haproxy_b" # verify that either haproxy_a or haproxy_b is running
    interval 1                         # check every second
    weight 2                           # add 2 points to prio if OK
}

vrrp_instance VI {
    interface eth0               # interface to monitor
    state MASTER                 # will be changed to BACKUP automatically in case of leader re-voting
    virtual_router_id 111        # Assign one ID for this route
    priority 100                 # start priority, will be adjusted based on the health checks
    virtual_ipaddress {
        {{env "KEEPALIVED_VIP"}} # the virtual IP
    }
    unicast_peer {               # IP addresses of all other peer nodes
        {{range service "consul"}}{{$s := .}}{{if ne $s.Address $node.Address}}{{$s.Address}}
        {{end}}{{end}}
    }
    track_script {
        chk_haproxy
    }
}
{{end}}
